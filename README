                        *********************************************
			****************    Leon  *******************
			**************** User's manual **************
			*********************************************
								
		Gaetan Benoit, Claire Lemaitre, Dominique Lavenier, Guillaume Rizk.		  		  
					  July 2014


								
LICENSE
	*  GNU AFFERO GENERAL PUBLIC LICENSE
	*  Copyright (C) 2014 INRIA
	see the LICENSE file
	
INSTALL
	CMake is required to compile leon (http://www.cmake.org/cmake/resources/software.html)
	See the INSTALL file.
	NOTE: If you retrieved a source archive, you can compile the project with 'sh INSTALLâ€™

	compilation was tested with gcc and g++ version>=4.5 and clang version>=4.1
	
CHANGELOG


-version 1.0.0 April 16, 2015
 bug fixes

-version 0.3  March 19, 2015
 added quality compression, and other optimizations

-version 0.2.1  Dec 18, 2014
 bug fixes

-version 0.2     Oct 31, 2014
 major performance improvement (about ~ 2 times faster)

-version 0.1.2  Aug 10, 2014  
 initial public release


MANUAL	 
								
1/ Description
	Leon is a fasta and fastq read compressor using a probabilistic de Bruijn Graph, without the need of any reference genome.
It compresses qualities in lossy mode by default, by using information from k-mer counting. Downstream analysis on SNP calling compared to a gold standard showed the modification in qualities can in fact increase SNP calling performance (a little).		

2/ Usage

Usage for Leon :

Mandatory options
    -file       (1 arg) :    input file (e.g. FASTA/FASTQ for compression or .leon file for decompression)  
    -c                  :    compress  
    -d                  :    decompress  


Optional parameters 
    -nb-cores           :    number of cores (default is the maximum available number of cores)  


Optional Compression parameters  
    -kmer-size   <int>  :    kmer size  (default 31), currently should be <32 (or need to recompile, see below)
    -abundance   <int>  :    minimal abundance threshold for solid kmers  (default: automatic)
    -lossless           :    switch to lossless compression for qualities (default is lossy. lossy has much higher compression rate, and the loss is in fact a gain. lossy is better!)
    -seq-only         :    store dna sequence only, header and qualitiess are discarded, will decompress to fasta (same as -noheader -noqual)
    -noheader         :    discard header
    -noqual           :    discard quality scores


Examples : 

leon -file read.fasta -c 
 -> generates the file read.leon
 
leon -file read.leon  -d 
 -> generates the file read_d.fasta

 

Note : 
In order to use k values larger than 31, recompilation is necessary (for the moment, this will be improved in next versions).
In the sequence of commands given in the INSTALL file, change the command: 
   cmake ..
by 
   cmake -Dk1=64 -Dk2=96 -Dk3=128 -Dk4=162 ..
this will allow to use k<63
for larger k, change the values such that they are multiple of 32 and k1<k2<k3<k4
